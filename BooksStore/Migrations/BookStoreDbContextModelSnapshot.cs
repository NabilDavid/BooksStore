// <auto-generated />
using System;
using BooksStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BooksStore.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    partial class BookStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BooksStore.Models.Auther", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fullName");

                    b.HasKey("id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BooksStore.Models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Autherid");

                    b.Property<string>("description");

                    b.Property<string>("imageUrl");

                    b.Property<string>("title");

                    b.HasKey("id");

                    b.HasIndex("Autherid");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BooksStore.Models.Book", b =>
                {
                    b.HasOne("BooksStore.Models.Auther", "Auther")
                        .WithMany()
                        .HasForeignKey("Autherid");
                });
#pragma warning restore 612, 618
        }
    }
}
